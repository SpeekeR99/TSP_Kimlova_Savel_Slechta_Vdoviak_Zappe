variables:
  IMAGE_NODE: node:18.18-alpine
  IMAGE_DOCKER: docker:20.10
  IMAGE_ANSIBLE: "cytopia/ansible:2.12"
  DOCKER_IN_DOCKER_SERVICE: docker:20.10-dind
  WEB_DIR: "web"
  ANSIBLE_DIR: "ansible"

workflow:
  rules:
    # main branch = production
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      variables:
        PACKAGE_NAME: "web-dist"
        ENVIRONMENT: production
        NODEJSAPP_URL: http://kivforms.xyz

    # any other branch = development
    - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
      variables:
        PACKAGE_NAME: "web-dist-dev"
        ENVIRONMENT: development
        NODEJSAPP_URL: http://147.228.173.196

default:
  image: alpine:3.17
  tags:
    - kiv

stages:
  - test
  - build
  - deploy

test-unit-web:
  stage: test
  image: $IMAGE_NODE
  script:
    - cd $WEB_DIR
    - npm install
    - npm run test

# TODO (slechtaj): enable when kiv runners are fixed
# -> building in separate project for now, because kiv runners suck (https://gitlab.com/gitlab-org/gitlab-runner/-/issues/1986)
# build-docker-image:
#   stage: build
#   image: $IMAGE_DOCKER
#   services:
#     - $DOCKER_IN_DOCKER_SERVICE
#   script:
#     - ./scripts/build-publish-docker.sh $PACKAGE_NAME

deploy-app:
  stage: deploy
  image: $IMAGE_ANSIBLE
  before_script:
    - echo "Deploying to ${ENVIRONMENT}"
    - which ssh-agent || ( apk --update add openssh-client )
    - eval $(ssh-agent -s)
    - chmod 0400 $SSH_PRIVATE_KEY
    - ssh-add $SSH_PRIVATE_KEY
    - mkdir -p ~/.ssh
    - chmod 0700 ~/.ssh
    - cp $SSH_SERVER_HOSTKEYS ~/.ssh/known_hosts
    - chmod 0644 ~/.ssh/known_hosts
    - apk --no-cache add tar unzip
  script:
    - cd $ANSIBLE_DIR
    - "ansible-playbook -i inventories/${ENVIRONMENT:-development}/hosts webservers.yml"
    - echo "App running at $NODEJSAPP_URL"
  environment:
    name: ${ENVIRONMENT}
    url: $NODEJSAPP_URL
  when: manual
