#!/bin/bash
#
# init.d for nodejsapp service
#

SERVICE_NAME={{ web_service_name }}
SERVICE_DIR={{ nodejsapp_base_dir }}
PID_FILE={{ nodejsapp_pid_file_dest }}
SERVICE_USER={{ nodejsapp_user }}
LOG_FILE={{ nodejsapp_log_dir }}/service.out

cd $SERVICE_DIR

# SIGTERM = 15
killtree() {
	local _pid=$1
	local _sig=${2:-15}
	for _child in $(ps -o pid --no-headers --ppid ${_pid}); do
		killtree ${_child} ${_sig}
	done
	kill -${_sig} ${_pid}
}

case $1 in
start)
	echo "Starting $SERVICE_NAME ..."
	if [ -f $PID_FILE ]; then
		PID=$(cat $PID_FILE)
		killtree $PID
		sleep '2'
	fi
	cd $SERVICE_DIR
	# su $SERVICE_USER -c "nohup 'NODE_ENV=production node ./dist/src/server/server.js' >>$LOG_FILE" &
	#sudo -u $SERVICE_USER nohup bash -c 'source /home/$SERVICE_USER/.nvm/nvm.sh && NODE_ENV=production node ./dist/src/server/server.js' >>$LOG_FILE &
	cmd="source /home/${SERVICE_USER}/.nvm/nvm.sh && NODE_ENV=production node ./dist/src/server/server.js"
	sudo -u $SERVICE_USER nohup bash -c "$cmd" >>$LOG_FILE &
	echo $! >$PID_FILE
	echo "$SERVICE_NAME started ..."
	;;
stop)
	if [ -f $PID_FILE ]; then
		echo "Stopping $SERVICE_NAME ..."
		PID=$(cat $PID_FILE)
		killtree $PID
		echo "$SERVICE_NAME stopped ..."
		sleep '2'
		/usr/bin/kill -s 0 $(cat $PID_FILE) || rm $PID_FILE
	else
		echo "$SERVICE_NAME is not running ..."
	fi
	;;
status)
	if [ -f $PID_FILE ]; then
		/usr/bin/kill -s 0 $(cat $PID_FILE)
		rc=$?
		if [[ $rc == 0 ]]; then
			PID=$(cat $PID_FILE)
			echo "{{ web_service_name }} running with pid $PID"
			exit 0
		else
			echo "{{ web_service_name }} not running"
			exit 1
		fi
	else
		echo "pid file not found"
		exit 1
	fi
	;;
*)
	echo "Usage: {{ nodejsapp_base_dir }}/{{ web_service_name }}.sh \{start|stop|status}"
	exit 1
	;;
esac
